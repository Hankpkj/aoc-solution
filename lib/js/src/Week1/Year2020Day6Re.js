// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Input = require("../Util/input.js");
var Belt_List = require("rescript/lib/js/belt_List.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_SetString = require("rescript/lib/js/belt_SetString.js");

var input = Input.Input.get(/* Double */1, 6);

function sum(a, b) {
  return a + b | 0;
}

function getSetString(s) {
  return Belt_SetString.fromArray(s.split(""));
}

var allAlpha = Belt_SetString.fromArray("abcdefghijklmnopqrstuvwxyz".split(""));

var emptyAlpha = Belt_SetString.fromArray("".split(""));

function getUnion(arr) {
  return Belt_SetString.size(Belt_Array.reduce(arr, allAlpha, Belt_SetString.union));
}

function getIntersect(arr) {
  return Belt_SetString.size(Belt_Array.reduce(arr, allAlpha, Belt_SetString.intersect));
}

function parseLine(str) {
  return Belt_SetString.fromArray(str.split(""));
}

function parsePhrase(str) {
  return Belt_Array.map(str.split("\n"), parseLine);
}

var l = Belt_List.fromArray(Belt_Array.map(input, parsePhrase));

var union = Belt_List.reduce(Belt_List.map(l, getUnion), 0, sum);

console.log(union);

var intersect = Belt_List.reduce(Belt_List.map(l, getIntersect), 0, sum);

console.log(intersect);

exports.input = input;
exports.sum = sum;
exports.getSetString = getSetString;
exports.allAlpha = allAlpha;
exports.emptyAlpha = emptyAlpha;
exports.getUnion = getUnion;
exports.getIntersect = getIntersect;
exports.parseLine = parseLine;
exports.parsePhrase = parsePhrase;
exports.l = l;
exports.union = union;
exports.intersect = intersect;
/* input Not a pure module */
